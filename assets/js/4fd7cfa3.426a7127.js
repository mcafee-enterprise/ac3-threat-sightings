"use strict";(self.webpackChunkac3_threat_sightings=self.webpackChunkac3_threat_sightings||[]).push([[7462],{3248:function(e,n,t){var i=t(7294),a=t(7273);a.Z.initialize({startOnLoad:!0});n.Z=function(e){var n=e.chart;return(0,i.useEffect)((function(){a.Z.contentLoaded()}),[]),i.createElement("div",{className:"mermaid"},n)}},4443:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return c},contentTitle:function(){return d},metadata:function(){return l},toc:function(){return h},default:function(){return m}});var i=t(7462),a=t(3366),r=(t(7294),t(4137)),o=t(3248),s=["components"],c={},d="Creating your first sighting",l={unversionedId:"Getting Started/Creating your first Sighting",id:"Getting Started/Creating your first Sighting",isDocsHomePage:!1,title:"Creating your first sighting",description:"This article describes how to create your first Threat Sighting step by step.",source:"@site/docs/02-Getting Started/03-Creating your first Sighting.md",sourceDirName:"02-Getting Started",slug:"/Getting Started/Creating your first Sighting",permalink:"/ac3-threat-sightings/docs/Getting Started/Creating your first Sighting",tags:[],version:"current",sidebarPosition:3,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Schema Overview",permalink:"/ac3-threat-sightings/docs/Getting Started/Schema"},next:{title:"Validating your schema",permalink:"/ac3-threat-sightings/docs/Getting Started/Validating your schema"}},h=[{value:"Standard Sections",id:"standard-sections",children:[]},{value:"Let&#39;s start with the required fields",id:"lets-start-with-the-required-fields",children:[{value:"Step 1 - Create your template or start from scratch",id:"step-1---create-your-template-or-start-from-scratch",children:[]},{value:"Step 2 - Fill the header section",id:"step-2---fill-the-header-section",children:[]},{value:"Step 3 - Now focus on behaviors",id:"step-3---now-focus-on-behaviors",children:[]},{value:"Step 4 - Finish with the footer",id:"step-4---finish-with-the-footer",children:[]},{value:"Step 5 - Remember the threatInformation!!",id:"step-5---remember-the-threatinformation",children:[]}]},{value:"What do we have at this moment?",id:"what-do-we-have-at-this-moment",children:[]},{value:"Let&#39;s finish with the fields not required",id:"lets-finish-with-the-fields-not-required",children:[{value:"Step 6 - Add Threat Hunting information for the community",id:"step-6---add-threat-hunting-information-for-the-community",children:[]},{value:"Step 7 - Lastly but not least.. Indicators of compromise!",id:"step-7---lastly-but-not-least-indicators-of-compromise",children:[]}]}],p={toc:h};function m(e){var n=e.components,t=(0,a.Z)(e,s);return(0,r.kt)("wrapper",(0,i.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"creating-your-first-sighting"},"Creating your first sighting"),(0,r.kt)("p",null,"This article describes how to create your first Threat Sighting step by step."),(0,r.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,r.kt)("div",{parentName:"div",className:"admonition-heading"},(0,r.kt)("h5",{parentName:"div"},(0,r.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,r.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"BEFORE YOU BEGIN")),(0,r.kt)("div",{parentName:"div",className:"admonition-content"},(0,r.kt)("p",{parentName:"div"},"It's important before you begin with your first Threat Sighting creation that you have read the schema overview section. If you didn't, please, go and understand each field available in the current version."))),(0,r.kt)("h2",{id:"standard-sections"},"Standard Sections"),(0,r.kt)("p",null,"As you will know, there are required sections in Threat Sightings. Therefore, when you are ready to create a Threat Sighting, you need to have clear which are those sections in order to add it."),(0,r.kt)("p",null,"All the Threat Sightings ",(0,r.kt)("strong",{parentName:"p"},"must to have")," the following sections."),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"header"),(0,r.kt)("li",{parentName:"ol"},"threatSightings"),(0,r.kt)("li",{parentName:"ol"},"behavior"),(0,r.kt)("li",{parentName:"ol"},"footer")),(0,r.kt)("h2",{id:"lets-start-with-the-required-fields"},"Let's start with the required fields"),(0,r.kt)("p",null,"There isn't order to create a Threat Sighting. However, based in our experience, is interesting follow the order defined in this section in the time when you are decided to create a Threat Sighting."),(0,r.kt)("h3",{id:"step-1---create-your-template-or-start-from-scratch"},"Step 1 - Create your template or start from scratch"),(0,r.kt)("p",null,"When you are going to create a Threat Sighting, you will have a template with the required fields introduced or you can start from scratch writing the YAML file. We recommend use a template, since it save you time."),(0,r.kt)("p",null,"The following template can be a good start."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"---\nheader:\n  sightingReportId: \n  status: \n  description: \n  author: \n  acknowledgement: \n  tlp: \n  threatInformation:\n    adversaries:\n    - \n    malware:\n    - \n    tools:\n    - \n    lolbas:\n    - \n    regions:\n    - \n    industries:\n    - \nthreatSightings:\n  - sighting: \n    id: \n    behaviors:   \n    - behavior: \n      id: \n      type: \n      weapon:\nfooter:\n  changeTracking:\n    created: \n    lastModified: \n    sightingVersion:\n    schemaVersion: \n  references:\n    - \n")),(0,r.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,r.kt)("div",{parentName:"div",className:"admonition-heading"},(0,r.kt)("h5",{parentName:"div"},(0,r.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,r.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"IMPORTANT")),(0,r.kt)("div",{parentName:"div",className:"admonition-content"},(0,r.kt)("p",{parentName:"div"},"Note that some fields will change in future schema versions. You can check the latest version in our changelog."),(0,r.kt)("p",{parentName:"div"},(0,r.kt)("a",{parentName:"p",href:"https://github.com/mcafee-enterprise/ac3-threat-sightings/blob/main/CHANGELOG.md"},"https://github.com/mcafee-enterprise/ac3-threat-sightings/blob/main/CHANGELOG.md")))),(0,r.kt)("h3",{id:"step-2---fill-the-header-section"},"Step 2 - Fill the header section"),(0,r.kt)("p",null,"In this step you will start filling the Threat Sighting. As we said, there isn't order, but start for the beginning always is important! Let's imagine that we are creating a Threat Sighting related to TA551. In the campaign or intrusion that we want cover they have used Valak malware and differents tools to achieve their objectives."),(0,r.kt)("p",null,"First, fill the information related to ",(0,r.kt)("inlineCode",{parentName:"p"},"description"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"author"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"id"),", etc..."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"---\nheader:\n  sightingReportId: 62cbd3e0-e672-4251-b3cc-774267b693fc\n  status: wip\n  description: TA551 (Shatak) is a financially motivated cybercrime group. In this campaign, they have used Valak and different LOLBAS to establish C2 communications and exfiltrate corporate information.\n  author: AC3 Threat Sightings - Trellix\n  acknowledgement: Trellix\n  tlp: white\n")),(0,r.kt)("p",null,"Remember follow the documentation for each field in the ",(0,r.kt)("strong",{parentName:"p"},"Schema Overview")," section."),(0,r.kt)("p",null,"With this information completed, from our point of view it is more interesting to fill the ",(0,r.kt)("inlineCode",{parentName:"p"},"threatSighting")," information than the ",(0,r.kt)("inlineCode",{parentName:"p"},"threatInformation"),", because while you are adding behaviors, you will discover new tools or lolbas used in the campaign. So, finally will be a good practice check all the ",(0,r.kt)("inlineCode",{parentName:"p"},"behaviors")," in the end and get all the tools used for put it in the ",(0,r.kt)("inlineCode",{parentName:"p"},"threatInformation")," section."),(0,r.kt)("h3",{id:"step-3---now-focus-on-behaviors"},"Step 3 - Now focus on behaviors"),(0,r.kt)("p",null,"The Step 3 is focused in three elements mainly, ",(0,r.kt)("inlineCode",{parentName:"p"},"threatSightings"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"sighting")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"behavior")," sections. If you remember, each YAML file has only one ",(0,r.kt)("inlineCode",{parentName:"p"},"threatSighting")," section, however, each ",(0,r.kt)("inlineCode",{parentName:"p"},"threatSighting")," section can have different ",(0,r.kt)("inlineCode",{parentName:"p"},"sighting")," sections in turn. And finally, each ",(0,r.kt)("inlineCode",{parentName:"p"},"sighting")," can have many ",(0,r.kt)("inlineCode",{parentName:"p"},"behaviors")," as you want to add. "),(0,r.kt)("br",null),(0,r.kt)(o.Z,{chart:"\n\tgraph LR;\n\t\tthreatSighting--\x3eSighting_1;\n\t\tthreatSighting--\x3eSighting_2;\n\t\tthreatSighting--\x3eSighting_3;\n\t\tSighting_1--\x3ebehavior_1_1;\n\t\tSighting_1--\x3ebehavior_1_2;\n\t\tSighting_2--\x3ebehavior_2_1;\n\t\tSighting_2--\x3ebehavior_2_2;\n\t\tSighting_2--\x3ebehavior_2_3;\n\t\tSighting_3--\x3ebehavior_3_1;\n",mdxType:"Mermaid"}),(0,r.kt)("br",null),(0,r.kt)("p",null,"In this example, let's suppose that the intrusion that we are analyzing has two ",(0,r.kt)("inlineCode",{parentName:"p"},"sightings"),", one related to ",(0,r.kt)("inlineCode",{parentName:"p"},"execution")," tactic and another one related to ",(0,r.kt)("inlineCode",{parentName:"p"},"C2")," tactic. And, the ",(0,r.kt)("inlineCode",{parentName:"p"},"execution")," tactic has two behaviors while that ",(0,r.kt)("inlineCode",{parentName:"p"},"C2")," tactic has only one. Therefore, we are going to add those ",(0,r.kt)("inlineCode",{parentName:"p"},"sightings"),"."),(0,r.kt)("br",null),(0,r.kt)("br",null),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"---\nheader:\n  sightingReportId: 62cbd3e0-e672-4251-b3cc-774267b693fc\n  status: wip\n  description: TA551 (Shatak) is a financially motivated cybercrime group. In this campaign, they have used Valak and different LOLBAS to establish C2 communications and exfiltrate corporate information.\n  author: AC3 Threat Sightings - Trellix\n  acknowledgement: Trellix\n  tlp: white\nthreatSightings:\n  - sighting: Execution - User Execution (weaponized .doc file) -> Winword ->  MSHTA (via CMD) -> REGSVR32.\n    id: d761c0cd-54ed-47d0-ae51-2f9eeb59a28d\n    behaviors:   \n    - behavior: \n      id: \n      type: \n      weapon:\n    - behavior: \n      id: \n      type: \n  - sighting: C2 - REGSVR32 downloads and executes Cobalt Strike shellcode runner.\n    id: 04f054ce-c782-4db3-98d6-827fc5c9f04a\n    behaviors:   \n    - behavior: \n      id: \n      type: \n      weapon:\n")),(0,r.kt)("p",null,"At this point, we just need fill the information of each behavior. Is really important add as much detail as possible. Remember that you can add information related to differents event types. See the behavior section (field type) into ",(0,r.kt)("strong",{parentName:"p"},"Schema Overview")," to see what types are available. "),(0,r.kt)("br",null),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},'---\nheader:\n  sightingReportId: 62cbd3e0-e672-4251-b3cc-774267b693fc\n  status: wip\n  description: TA551 (Shatak) is a financially motivated cybercrime group. In this campaign, they have used Valak and different LOLBAS to establish C2 communications and exfiltrate corporate information.\n  author: AC3 Threat Sightings - Trellix\n  acknowledgement: Trellix\n  tlp: white\nthreatSightings:\n  - sighting: Execution - User Execution (weaponized .doc file) -> Winword ->  MSHTA (via CMD) -> REGSVR32.\n    id: d761c0cd-54ed-47d0-ae51-2f9eeb59a28d\n    observables:   \n    - behavior: User opened weaponized .doc document\n      type: Process Created\n      id: 5f3b8f2a-2493-48a2-b1da-4a9ef4c99d34\n      weapon: winword.exe\n      processes:\n        - process: "C:\\\\Program Files\\\\Microsoft Office\\\\Office14\\\\WINWORD.EXE"\n          cmdLine:\n          - \'"C:\\\\Program Files\\\\Microsoft Office\\\\Office14\\\\WINWORD.EXE" /n "C:\\\\Users\\\\#{user}\\\\AppData\\\\Local\\\\Temp\\\\specifics 07.21.doc"\'\n          - \'"C:\\\\Program Files\\\\Microsoft Office\\\\Office16\\\\WINWORD.EXE" /n "C:\\\\Users\\\\#{user}\\\\AppData\\\\Local\\\\Temp\\\\Rar$DIb46044.38871\\\\adjure 07.21.2021.doc" /o ""\'\n      att&ck:\n        execution:\n        - "T1204.002 - User Execution: Malicious File"\n    - behavior: MSHTA spawns REGSVR32. REGSVR32 executes a JPG file from PUBLIC folder\n      id: 4bb05b0e-3f9a-4d2a-86a9-1f357e4efc4f\n      type: Process Created\n      weapon: regsvr32.exe\n      processes:\n        - process: C:\\\\Windows\\\\System32\\\\regsvr32.exe\n          parentProcess: C:\\\\Windows\\\\System32\\\\mshta.exe\n          cmdLine:\n          - \'"C:\\\\Windows\\\\System32\\\\regsvr32.exe" c:\\\\users\\\\public\\\\brDefine.jpg\'\n          - \'"C:\\\\Windows\\\\System32\\\\regsvr32.exe" c:\\\\users\\\\public\\\\uGirl.jpg\'\n      notes:\n      - Those JPG files are actually DLL files.\n      att&ck:\n        defenseEvasion:\n        - "T1218.010 - Signed Binary Proxy Execution: Regsvr32"\n        - "T1036 - Masquerading"\n        - "T1218.005 - Signed Binary Proxy Execution: Mshta"\n        commandAndControl:\n        - "T1105 - Ingress Tool Transfer"\n  - sighting: C2 - REGSVR32 downloads and executes Cobalt Strike shellcode runner.\n    id: 04f054ce-c782-4db3-98d6-827fc5c9f04a\n    observables:   \n    - behavior: Shellcode runner connected to public server\n      type: Network Accessed\n      id: 910ac6bc-d178-45ac-b421-21aa39c5f824\n      weapon: Cobalt Strike\n      connections:\n        - dstIp: 89.163.140[.]101\n          url: hxxp://89.163.140[.]101:8000/download/abc.bin\n          dstPort: 8000\n          protocol: tcp\n          method: GET\n          process: \'C:\\\\Users\\\\#{user}\\\\AppData\\\\Local\\\\Temp\\\\jyheeckptwa.exe\'\n      att&ck:\n        commandAndControl:\n        - "T1105 - Ingress Tool Transfer"\n        - "T1071 - Web Protocols"\n')),(0,r.kt)("p",null,"Note how we added ATT&CK techniques into the ",(0,r.kt)("inlineCode",{parentName:"p"},"att&ck")," field. That field is not required, but if you can map the behavior with a technique, it's recommended do it"),(0,r.kt)("h3",{id:"step-4---finish-with-the-footer"},"Step 4 - Finish with the footer"),(0,r.kt)("p",null,"In order to finish with these required fields, let's fill the ",(0,r.kt)("inlineCode",{parentName:"p"},"footer")," section with the tracking information of your Threat Sighting. The information into this section is based purely on tracking information about the dates and versions. Also, if you have URLs where you got information, is recommended add it into the references field."),(0,r.kt)("br",null),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},'---\nheader:\n  sightingReportId: 62cbd3e0-e672-4251-b3cc-774267b693fc\n  status: wip\n  description: TA551 (Shatak) is a financially motivated cybercrime group. In this campaign, they have used Valak and different LOLBAS to establish C2 communications and exfiltrate corporate information.\n  author: AC3 Threat Sightings - Trellix\n  acknowledgement: Trellix\n  tlp: white\nthreatSightings:\n  - sighting: Execution - User Execution (weaponized .doc file) -> Winword ->  MSHTA (via CMD) -> REGSVR32.\n    id: d761c0cd-54ed-47d0-ae51-2f9eeb59a28d\n    observables:   \n    - behavior: User opened weaponized .doc document\n      type: Process Created\n      id: 5f3b8f2a-2493-48a2-b1da-4a9ef4c99d34\n      weapon: winword.exe\n      processes:\n        - process: "C:\\\\Program Files\\\\Microsoft Office\\\\Office14\\\\WINWORD.EXE"\n          cmdLine:\n          - \'"C:\\\\Program Files\\\\Microsoft Office\\\\Office14\\\\WINWORD.EXE" /n "C:\\\\Users\\\\#{user}\\\\AppData\\\\Local\\\\Temp\\\\specifics 07.21.doc"\'\n          - \'"C:\\\\Program Files\\\\Microsoft Office\\\\Office16\\\\WINWORD.EXE" /n "C:\\\\Users\\\\#{user}\\\\AppData\\\\Local\\\\Temp\\\\Rar$DIb46044.38871\\\\adjure 07.21.2021.doc" /o ""\'\n      att&ck:\n        execution:\n        - "T1204.002 - User Execution: Malicious File"\n    - behavior: MSHTA spawns REGSVR32. REGSVR32 executes a JPG file from PUBLIC folder\n      id: 4bb05b0e-3f9a-4d2a-86a9-1f357e4efc4f\n      type: Process Created\n      weapon: regsvr32.exe\n      processes:\n        - process: C:\\\\Windows\\\\System32\\\\regsvr32.exe\n          parentProcess: C:\\\\Windows\\\\System32\\\\mshta.exe\n          cmdLine:\n          - \'"C:\\\\Windows\\\\System32\\\\regsvr32.exe" c:\\\\users\\\\public\\\\brDefine.jpg\'\n          - \'"C:\\\\Windows\\\\System32\\\\regsvr32.exe" c:\\\\users\\\\public\\\\uGirl.jpg\'\n      notes:\n      - Those JPG files are actually DLL files.\n      att&ck:\n        defenseEvasion:\n        - "T1218.010 - Signed Binary Proxy Execution: Regsvr32"\n        - "T1036 - Masquerading"\n        - "T1218.005 - Signed Binary Proxy Execution: Mshta"\n        commandAndControl:\n        - "T1105 - Ingress Tool Transfer"\n  - sighting: C2 - REGSVR32 downloads and executes Cobalt Strike shellcode runner.\n    id: 04f054ce-c782-4db3-98d6-827fc5c9f04a\n    observables:   \n    - behavior: Shellcode runner connected to public server\n      type: Network Accessed\n      id: 910ac6bc-d178-45ac-b421-21aa39c5f824\n      weapon: Cobalt Strike\n      connections:\n        - dstIp: 89.163.140[.]101\n          url: hxxp://89.163.140[.]101:8000/download/abc.bin\n          dstPort: 8000\n          protocol: tcp\n          method: GET\n          process: \'C:\\\\Users\\\\#{user}\\\\AppData\\\\Local\\\\Temp\\\\jyheeckptwa.exe\'\n      att&ck:\n        commandAndControl:\n        - "T1105 - Ingress Tool Transfer"\n        - "T1071 - Web Protocols"\nfooter:\n  changeTracking:\n    created: 2021-08-02\n    lastModified: 2021-11-03\n    sightingVersion: 1.7\n    schemaVersion: 1.6\n  references:\n  - https://www.malware-traffic-analysis.net/2021/07/21/index.html\n')),(0,r.kt)("h3",{id:"step-5---remember-the-threatinformation"},"Step 5 - Remember the threatInformation!!"),(0,r.kt)("p",null,"At this point, do you remember when we said in the ",(0,r.kt)("a",{href:"#step-2---fill-the-header-section"}," step 2 ")," that we recommend fill first the ",(0,r.kt)("inlineCode",{parentName:"p"},"threatSighting")," section than ",(0,r.kt)("inlineCode",{parentName:"p"},"threatInformation")," section? Then, don't forget to complete it now!"),(0,r.kt)("p",null,"In the ",(0,r.kt)("inlineCode",{parentName:"p"},"header")," section we need add the ",(0,r.kt)("inlineCode",{parentName:"p"},"threatInformation")," section with all information about the malware, lolbas, tools, etc... used by the actor, in this case, TA551."),(0,r.kt)("p",null,"Let's imagine that TA551 has used the following components."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Malware")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Valak"),(0,r.kt)("li",{parentName:"ul"},"Trickbot")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Tools")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Empire"),(0,r.kt)("li",{parentName:"ul"},"Cobalt Strike")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"LOLBAS")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"regsvr32.exe"),(0,r.kt)("li",{parentName:"ul"},"mshta.exe"),(0,r.kt)("li",{parentName:"ul"},"winword.exe"),(0,r.kt)("li",{parentName:"ul"},"cmd.exe")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Affected regions")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Western Europe:",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Germany"))),(0,r.kt)("li",{parentName:"ul"},"Northern America:",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"United States of America")))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Affected sectors")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Financial")),(0,r.kt)("p",null,"It's time to add this information into our Threat Sighting"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},'---\nheader:\n  sightingReportId: 62cbd3e0-e672-4251-b3cc-774267b693fc\n  status: wip\n  description: TA551 (Shatak) is a financially motivated cybercrime group. In this campaign, they have used Valak and different LOLBAS to establish C2 communications and exfiltrate corporate information.\n  author: AC3 Threat Sightings - Trellix\n  acknowledgement: Trellix\n  tlp: white\n  threatInformation:\n    adversaries:\n    - TA551\n    malware:\n    - Valak\n    - Trickbot\n    tools:\n    - Empire\n    - Cobalt Strike\n    lolbas:\n    - regsvr32.exe\n    - mshta.exe\n    - winword.exe\n    - cmd.exe\n    regions:\n      - Western Europe:\n        - Germany\n      - Northern America:\n        - United States of America\n    industries:\n    - Financial\nthreatSightings:\n  - sighting: Execution - User Execution (weaponized .doc file) -> Winword ->  MSHTA (via CMD) -> REGSVR32.\n    id: d761c0cd-54ed-47d0-ae51-2f9eeb59a28d\n    observables:   \n    - behavior: User opened weaponized .doc document\n      type: Process Created\n      id: 5f3b8f2a-2493-48a2-b1da-4a9ef4c99d34\n      weapon: winword.exe\n      processes:\n        - process: "C:\\\\Program Files\\\\Microsoft Office\\\\Office14\\\\WINWORD.EXE"\n          cmdLine:\n          - \'"C:\\\\Program Files\\\\Microsoft Office\\\\Office14\\\\WINWORD.EXE" /n "C:\\\\Users\\\\#{user}\\\\AppData\\\\Local\\\\Temp\\\\specifics 07.21.doc"\'\n          - \'"C:\\\\Program Files\\\\Microsoft Office\\\\Office16\\\\WINWORD.EXE" /n "C:\\\\Users\\\\#{user}\\\\AppData\\\\Local\\\\Temp\\\\Rar$DIb46044.38871\\\\adjure 07.21.2021.doc" /o ""\'\n      att&ck:\n        execution:\n        - "T1204.002 - User Execution: Malicious File"\n    - behavior: MSHTA spawns REGSVR32. REGSVR32 executes a JPG file from PUBLIC folder\n      id: 4bb05b0e-3f9a-4d2a-86a9-1f357e4efc4f\n      type: Process Created\n      weapon: regsvr32.exe\n      processes:\n        - process: C:\\\\Windows\\\\System32\\\\regsvr32.exe\n          parentProcess: C:\\\\Windows\\\\System32\\\\mshta.exe\n          cmdLine:\n          - \'"C:\\\\Windows\\\\System32\\\\regsvr32.exe" c:\\\\users\\\\public\\\\brDefine.jpg\'\n          - \'"C:\\\\Windows\\\\System32\\\\regsvr32.exe" c:\\\\users\\\\public\\\\uGirl.jpg\'\n      notes:\n      - Those JPG files are actually DLL files.\n      att&ck:\n        defenseEvasion:\n        - "T1218.010 - Signed Binary Proxy Execution: Regsvr32"\n        - "T1036 - Masquerading"\n        - "T1218.005 - Signed Binary Proxy Execution: Mshta"\n        commandAndControl:\n        - "T1105 - Ingress Tool Transfer"\n  - sighting: C2 - REGSVR32 downloads and executes Cobalt Strike shellcode runner.\n    id: 04f054ce-c782-4db3-98d6-827fc5c9f04a\n    observables:   \n    - behavior: Shellcode runner connected to public server\n      type: Network Accessed\n      id: 910ac6bc-d178-45ac-b421-21aa39c5f824\n      weapon: Cobalt Strike\n      connections:\n        - dstIp: 89.163.140[.]101\n          url: hxxp://89.163.140[.]101:8000/download/abc.bin\n          dstPort: 8000\n          protocol: tcp\n          method: GET\n          process: \'C:\\\\Users\\\\#{user}\\\\AppData\\\\Local\\\\Temp\\\\jyheeckptwa.exe\'\n      att&ck:\n        commandAndControl:\n        - "T1105 - Ingress Tool Transfer"\n        - "T1071 - Web Protocols"\nfooter:\n  changeTracking:\n    created: 2021-08-02\n    lastModified: 2021-11-03\n    sightingVersion: 1.7\n    schemaVersion: 1.6\n  references:\n  - https://www.malware-traffic-analysis.net/2021/07/21/index.html\n')),(0,r.kt)("p",null,'At this point, we have filled and finished our Threat Sighting with the required information... But as cybersecurity analyst, we want to add new valuable information to our sighting, for that reason, we recommend continue reading the "Let\'s finish with the not required fields" section.'),(0,r.kt)("h2",{id:"what-do-we-have-at-this-moment"},"What do we have at this moment?"),(0,r.kt)("p",null,"So far, if we represent the information that we have already in a visual way, will be the following."),(0,r.kt)(o.Z,{chart:"\ngraph LR\n    TS[TA551 Threat Sighting]\n    MA_1[valak]\n    MA_2[Trickbot]\n    SO[Empire]\n    SO_1[Cobalt Strike]\n    LOL_1[regsvr32.exe]\n    LOL_2[mshta.exe]\n    LOL_3[winword.exe]\n    LOL_4[cmd.exe]\n    CO[USA]\n    CO2[Germany]\n    RE_EU[Western Europe]\n    RE_AM[Northern America]\n    SE[Financial]\n    SEC_1[Header]\n    SEC_2[Threat Information]\n    SEC_3[Malware]\n    SEC_4[LOLBAS]\n    SEC_5[Regions]\n    SEC_7[Sector]\n    SEC_8[Threat Sightings]\n    SEC_9[Sighting - Execution]\n    SEC_10[Sighting - C2]\n    SEC_11[Tools]\n    BE_1[User opened weaponized .doc document]\n    BE_2[MSHTA spawns REGSVR32. REGSVR32 executes a JPG file from PUBLIC folder]\n    BE_3[Shellcode runner connected to public server]\n    TS --\x3e SEC_1\n    SEC_1 --\x3e SEC_2\n    SEC_2 --\x3e SEC_3\n    SEC_3 --\x3e MA_1\n    SEC_3 --\x3e MA_2\n    SEC_2 --\x3e SEC_4\n    SEC_4 --\x3e LOL_1\n    SEC_4 --\x3e LOL_2\n    SEC_4 --\x3e LOL_3\n    SEC_4 --\x3e LOL_4\n    SEC_2 --\x3e SEC_5\n    SEC_5 --\x3e RE_EU\n    SEC_5 --\x3e RE_AM\n    RE_EU --\x3e CO2\n    RE_AM --\x3e CO\n    SEC_2 --\x3e SEC_11\n    SEC_11 --\x3e SO\n    SEC_11 --\x3e SO_1\n    SEC_2 --\x3e SEC_7\n    SEC_7 --\x3e SE\n    TS --\x3e SEC_8\n    SEC_8 --\x3e SEC_9\n    SEC_8 --\x3e SEC_10\n    SEC_9 --\x3e |Behavior|BE_1\n    SEC_9 --\x3e |Behavior| BE_2\n    SEC_10 --\x3e |Behavior| BE_3\n",mdxType:"Mermaid"}),(0,r.kt)("h2",{id:"lets-finish-with-the-fields-not-required"},"Let's finish with the fields not required"),(0,r.kt)("h3",{id:"step-6---add-threat-hunting-information-for-the-community"},"Step 6 - Add Threat Hunting information for the community"),(0,r.kt)("p",null,"What about if we add information to help those threat detection engineers? Sounds good! The ",(0,r.kt)("inlineCode",{parentName:"p"},"ThreatHunting")," section was designed to create detection logic of those behaviors described into the ",(0,r.kt)("inlineCode",{parentName:"p"},"ThreatSighting")," section. Let's add one threat hunting query."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},'---\nheader:\n  sightingReportId: 62cbd3e0-e672-4251-b3cc-774267b693fc\n  status: wip\n  description: TA551 (Shatak) is a financially motivated cybercrime group. In this campaign, they have used Valak and different LOLBAS to establish C2 communications and exfiltrate corporate information.\n  author: AC3 Threat Sightings - Trellix\n  acknowledgement: Trellix\n  tlp: white\n  threatInformation:\n    adversaries:\n    - TA551\n    malware:\n    - Valak\n    - Trickbot\n    tools:\n    - Empire\n    - Cobalt Strike\n    lolbas:\n    - regsvr32.exe\n    - mshta.exe\n    - winword.exe\n    - cmd.exe\n    regions:\n      - Western Europe:\n        - Germany\n      - Northern America:\n        - United States of America\n    industries:\n    - Financial\nthreatSightings:\n  - sighting: Execution - User Execution (weaponized .doc file) -> Winword ->  MSHTA (via CMD) -> REGSVR32.\n    id: d761c0cd-54ed-47d0-ae51-2f9eeb59a28d\n    observables:   \n    - behavior: User opened weaponized .doc document\n      type: Process Created\n      id: 5f3b8f2a-2493-48a2-b1da-4a9ef4c99d34\n      weapon: winword.exe\n      processes:\n        - process: "C:\\\\Program Files\\\\Microsoft Office\\\\Office14\\\\WINWORD.EXE"\n          cmdLine:\n          - \'"C:\\\\Program Files\\\\Microsoft Office\\\\Office14\\\\WINWORD.EXE" /n "C:\\\\Users\\\\#{user}\\\\AppData\\\\Local\\\\Temp\\\\specifics 07.21.doc"\'\n          - \'"C:\\\\Program Files\\\\Microsoft Office\\\\Office16\\\\WINWORD.EXE" /n "C:\\\\Users\\\\#{user}\\\\AppData\\\\Local\\\\Temp\\\\Rar$DIb46044.38871\\\\adjure 07.21.2021.doc" /o ""\'\n      att&ck:\n        execution:\n        - "T1204.002 - User Execution: Malicious File"\n    - behavior: MSHTA spawns REGSVR32. REGSVR32 executes a JPG file from PUBLIC folder\n      id: 4bb05b0e-3f9a-4d2a-86a9-1f357e4efc4f\n      type: Process Created\n      weapon: regsvr32.exe\n      processes:\n        - process: C:\\\\Windows\\\\System32\\\\regsvr32.exe\n          parentProcess: C:\\\\Windows\\\\System32\\\\mshta.exe\n          cmdLine:\n          - \'"C:\\\\Windows\\\\System32\\\\regsvr32.exe" c:\\\\users\\\\public\\\\brDefine.jpg\'\n          - \'"C:\\\\Windows\\\\System32\\\\regsvr32.exe" c:\\\\users\\\\public\\\\uGirl.jpg\'\n      notes:\n      - Those JPG files are actually DLL files.\n      att&ck:\n        defenseEvasion:\n        - "T1218.010 - Signed Binary Proxy Execution: Regsvr32"\n        - "T1036 - Masquerading"\n        - "T1218.005 - Signed Binary Proxy Execution: Mshta"\n        commandAndControl:\n        - "T1105 - Ingress Tool Transfer"\n  - sighting: C2 - REGSVR32 downloads and executes Cobalt Strike shellcode runner.\n    id: 04f054ce-c782-4db3-98d6-827fc5c9f04a\n    observables:   \n    - behavior: Shellcode runner connected to public server\n      type: Network Accessed\n      id: 910ac6bc-d178-45ac-b421-21aa39c5f824\n      weapon: Cobalt Strike\n      connections:\n        - dstIp: 89.163.140[.]101\n          url: hxxp://89.163.140[.]101:8000/download/abc.bin\n          dstPort: 8000\n          protocol: tcp\n          method: GET\n          process: \'C:\\\\Users\\\\#{user}\\\\AppData\\\\Local\\\\Temp\\\\jyheeckptwa.exe\'\n      att&ck:\n        commandAndControl:\n        - "T1105 - Ingress Tool Transfer"\n        - "T1071 - Web Protocols"\nthreatHunting:\n  - query: Hunt for REGSVR32 instances spawned from MSHTA\n    queryId: edbe2569-1190-4a38-b6ca-a88b40cbf560\n    type: sigma\n    behaviorIds:\n    - 4bb05b0e-3f9a-4d2a-86a9-1f357e4efc4f\n    logsource:\n      category: process_creation\n      product: windows\n    detection:\n      selection:\n          ParentImage|endswith: \'\\\\mshta.exe\'\n      selection2:\n          Image|endswith:\n              - \'\\\\regsvr32.exe\'\n          CommandLine|contains|all:\n              - \'.jpg\'\n              - \'Users\'\n              - \'Public\'\n      condition: selection and selection2\nfooter:\n  changeTracking:\n    created: 2021-08-02\n    lastModified: 2021-11-03\n    sightingVersion: 1.7\n    schemaVersion: 1.6\n  references:\n  - https://www.malware-traffic-analysis.net/2021/07/21/index.html\n')),(0,r.kt)("h3",{id:"step-7---lastly-but-not-least-indicators-of-compromise"},"Step 7 - Lastly but not least.. Indicators of compromise!"),(0,r.kt)("p",null,"We do not always have indicators of compromise, but if we do, it is important to add them, since in some cases these could be used to detect some intrusions. "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},'---\nheader:\n  sightingReportId: 62cbd3e0-e672-4251-b3cc-774267b693fc\n  status: wip\n  description: TA551 (Shatak) is a financially motivated cybercrime group. In this campaign, they have used Valak and different LOLBAS to establish C2 communications and exfiltrate corporate information.\n  author: AC3 Threat Sightings - Trellix\n  acknowledgement: Trellix\n  tlp: white\n  threatInformation:\n    adversaries:\n    - TA551\n    malware:\n    - Valak\n    - Trickbot\n    tools:\n    - Empire\n    - Cobalt Strike\n    lolbas:\n    - regsvr32.exe\n    - mshta.exe\n    - winword.exe\n    - cmd.exe\n    regions:\n      - Western Europe:\n        - Germany\n      - Northern America:\n        - United States of America\n    industries:\n    - Financial\nthreatSightings:\n  - sighting: Execution - User Execution (weaponized .doc file) -> Winword ->  MSHTA (via CMD) -> REGSVR32.\n    id: d761c0cd-54ed-47d0-ae51-2f9eeb59a28d\n    observables:   \n    - behavior: User opened weaponized .doc document\n      type: Process Created\n      id: 5f3b8f2a-2493-48a2-b1da-4a9ef4c99d34\n      weapon: winword.exe\n      processes:\n        - process: "C:\\\\Program Files\\\\Microsoft Office\\\\Office14\\\\WINWORD.EXE"\n          cmdLine:\n          - \'"C:\\\\Program Files\\\\Microsoft Office\\\\Office14\\\\WINWORD.EXE" /n "C:\\\\Users\\\\#{user}\\\\AppData\\\\Local\\\\Temp\\\\specifics 07.21.doc"\'\n          - \'"C:\\\\Program Files\\\\Microsoft Office\\\\Office16\\\\WINWORD.EXE" /n "C:\\\\Users\\\\#{user}\\\\AppData\\\\Local\\\\Temp\\\\Rar$DIb46044.38871\\\\adjure 07.21.2021.doc" /o ""\'\n      att&ck:\n        execution:\n        - "T1204.002 - User Execution: Malicious File"\n    - behavior: MSHTA spawns REGSVR32. REGSVR32 executes a JPG file from PUBLIC folder\n      id: 4bb05b0e-3f9a-4d2a-86a9-1f357e4efc4f\n      type: Process Created\n      weapon: regsvr32.exe\n      processes:\n        - process: C:\\\\Windows\\\\System32\\\\regsvr32.exe\n          parentProcess: C:\\\\Windows\\\\System32\\\\mshta.exe\n          cmdLine:\n          - \'"C:\\\\Windows\\\\System32\\\\regsvr32.exe" c:\\\\users\\\\public\\\\brDefine.jpg\'\n          - \'"C:\\\\Windows\\\\System32\\\\regsvr32.exe" c:\\\\users\\\\public\\\\uGirl.jpg\'\n      notes:\n      - Those JPG files are actually DLL files.\n      att&ck:\n        defenseEvasion:\n        - "T1218.010 - Signed Binary Proxy Execution: Regsvr32"\n        - "T1036 - Masquerading"\n        - "T1218.005 - Signed Binary Proxy Execution: Mshta"\n        commandAndControl:\n        - "T1105 - Ingress Tool Transfer"\n  - sighting: C2 - REGSVR32 downloads and executes Cobalt Strike shellcode runner.\n    id: 04f054ce-c782-4db3-98d6-827fc5c9f04a\n    observables:   \n    - behavior: Shellcode runner connected to public server\n      type: Network Accessed\n      id: 910ac6bc-d178-45ac-b421-21aa39c5f824\n      weapon: Cobalt Strike\n      connections:\n        - dstIp: 89.163.140[.]101\n          url: hxxp://89.163.140[.]101:8000/download/abc.bin\n          dstPort: 8000\n          protocol: tcp\n          method: GET\n          process: \'C:\\\\Users\\\\#{user}\\\\AppData\\\\Local\\\\Temp\\\\jyheeckptwa.exe\'\n      att&ck:\n        commandAndControl:\n        - "T1105 - Ingress Tool Transfer"\n        - "T1071 - Web Protocols"\nthreatHunting:\n  - query: Hunt for REGSVR32 instances spawned from MSHTA\n    queryId: edbe2569-1190-4a38-b6ca-a88b40cbf560\n    type: sigma\n    behaviorIds:\n    - 4bb05b0e-3f9a-4d2a-86a9-1f357e4efc4f\n    logsource:\n      category: process_creation\n      product: windows\n    detection:\n      selection:\n          ParentImage|endswith: \'\\\\mshta.exe\'\n      selection2:\n          Image|endswith:\n              - \'\\\\regsvr32.exe\'\n          CommandLine|contains|all:\n              - \'.jpg\'\n              - \'Users\'\n              - \'Public\'\n      condition: selection and selection2\niocs:\n  - behaviorIds:\n    - 910ac6bc-d178-45ac-b421-21aa39c5f824\n    indicators:\n    - ipv4: 89.163.140[.]101\n    - url: http://89[].]163.140.101:8000/download/abc.bin\n  - behaviorIds:\n    - 4bb05b0e-3f9a-4d2a-86a9-1f357e4efc4f\n    indicators:\n    - filename: brDefine.jpg\n    - filename: uGirl.jpg\nfooter:\n  changeTracking:\n    created: 2021-08-02\n    lastModified: 2021-11-03\n    sightingVersion: 1.0\n    schemaVersion: 1.7\n  references:\n  - https://www.malware-traffic-analysis.net/2021/07/21/index.html\n')),(0,r.kt)("p",null,"At this point, we have developed our first Threat Sighting, oh yes! We can share it if we want with the community, and if not, we can use it internally to help us the understanding about threats and create patterns."))}m.isMDXComponent=!0}}]);