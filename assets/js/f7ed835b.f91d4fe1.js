"use strict";(self.webpackChunkac3_threat_sightings=self.webpackChunkac3_threat_sightings||[]).push([[9814],{4137:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return d}});var i=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,i,r=function(e,t){if(null==e)return{};var n,i,r={},a=Object.keys(e);for(i=0;i<a.length;i++)n=a[i],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(i=0;i<a.length;i++)n=a[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=i.createContext({}),h=function(e){var t=i.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=h(e.components);return i.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},u=i.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),u=h(n),d=r,g=u["".concat(s,".").concat(d)]||u[d]||p[d]||a;return n?i.createElement(g,o(o({ref:t},c),{},{components:n})):i.createElement(g,o({ref:t},c))}));function d(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,o=new Array(a);o[0]=u;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:r,o[1]=l;for(var h=2;h<a;h++)o[h]=n[h];return i.createElement.apply(null,o)}return i.createElement.apply(null,n)}u.displayName="MDXCreateElement"},1543:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return l},contentTitle:function(){return s},metadata:function(){return h},toc:function(){return c},default:function(){return u}});var i=n(7462),r=n(3366),a=(n(7294),n(4137)),o=["components"],l={},s="Validating your schema",h={unversionedId:"Getting Started/Validating your schema",id:"Getting Started/Validating your schema",isDocsHomePage:!1,title:"Validating your schema",description:"Once you have developed your first threat sighting, it is important validate the format to ensure that you did not a mistake. For that purpose, we have developed a `python\xb4 script to validate the information.",source:"@site/docs/02-Getting Started/04-Validating your schema.md",sourceDirName:"02-Getting Started",slug:"/Getting Started/Validating your schema",permalink:"/ac3-threat-sightings/docs/Getting Started/Validating your schema",tags:[],version:"current",sidebarPosition:4,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Creating your first sighting",permalink:"/ac3-threat-sightings/docs/Getting Started/Creating your first Sighting"},next:{title:"Darkside_Ransomware",permalink:"/ac3-threat-sightings/docs/Sightings/Darkside_Ransomware"}},c=[{value:"Threat Sighting validator",id:"threat-sighting-validator",children:[]},{value:"Installation",id:"installation",children:[]},{value:"Usage",id:"usage",children:[{value:"Validating a threat sighting",id:"validating-a-threat-sighting",children:[]}]}],p={toc:c};function u(e){var t=e.components,n=(0,r.Z)(e,o);return(0,a.kt)("wrapper",(0,i.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"validating-your-schema"},"Validating your schema"),(0,a.kt)("p",null,"Once you have developed your first threat sighting, it is important validate the format to ensure that you did not a mistake. For that purpose, we have developed a `python\xb4 script to validate the information."),(0,a.kt)("p",null,"You can find the script in our public github: ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/mcafee-enterprise/ac3-threat-sightings/tree/main/tools/sighting%20validator"},"https://github.com/mcafee-enterprise/ac3-threat-sightings/tree/main/tools/sighting%20validator")),(0,a.kt)("h2",{id:"threat-sighting-validator"},"Threat Sighting validator"),(0,a.kt)("p",null,"This script allows you to validate the schema of your threat sighting. when you are working on creating a threat sighting, there may be errors during the creation. Therefore, this script allows the user to validate if all the mandatory fields are defined and which ones that are not supported were entered."),(0,a.kt)("h2",{id:"installation"},"Installation"),(0,a.kt)("p",null,"Python3 is needed to run this script."),(0,a.kt)("p",null,"To install the dependencies run the following command."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"pip install -r requirements.txt\n")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Note"),": We recommend the use of virtualenv to install the dependencies. "),(0,a.kt)("h2",{id:"usage"},"Usage"),(0,a.kt)("p",null,"After installing all the dependencies, the use of the script is simple."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"> python sightingValidator.py -h\nusage: sightingValidator.py [-h] [-f INPUT_FILE]\n\nThreat Sightings Validator - This script allows you to validate if your threat sighting has a correct structure or not.\n\noptions:\n  -h, --help            show this help message and exit\n  -f INPUT_FILE, --file INPUT_FILE\n                        YAML File that you want verify the schema\n")),(0,a.kt)("h3",{id:"validating-a-threat-sighting"},"Validating a threat sighting"),(0,a.kt)("h4",{id:"without-errors"},"Without errors"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"> python sightingValidator.py -f sighting_Guildma.yml\n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"+------+-------+-----+----------+\n| GUID | Error | Key | Sighting |\n+------+-------+-----+----------+\n+------+-------+-----+----------+\n")),(0,a.kt)("h4",{id:"unexpected-element"},"Unexpected element"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"> python sightingValidator.py -f sighting_Guildma.yml\n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"+------+---------------------+----------------------------------------+------------------------------+\n| GUID |        Error        |                  Key                   |           Sighting           |\n+------+---------------------+----------------------------------------+------------------------------+\n|  -   |  Unexpected element | threatSightings.0.behaviors.1.proceses | .\\sighting_Guildma.yml       |\n+------+---------------------+----------------------------------------+------------------------------+\n")),(0,a.kt)("p",null,"An error occurred in the first ",(0,a.kt)("inlineCode",{parentName:"p"},"sighting")," key (position 0), and the second ",(0,a.kt)("inlineCode",{parentName:"p"},"behavior")," key (position 1) with a field called ",(0,a.kt)("inlineCode",{parentName:"p"},"proceses")," which doesn't exists in the schema. In this case, the correct form is ",(0,a.kt)("inlineCode",{parentName:"p"},"processes"),"."),(0,a.kt)("h4",{id:"duplicate-uuid"},"Duplicate uuid"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"> python sightingValidator.py -f sighting_Guildma.yml\n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"+------+----------------+--------------------------------------+------------------------------+\n| GUID |     Error      |                 Key                  |           Sighting           |\n+------+----------------+--------------------------------------+------------------------------+\n|  -   | Duplicate uuid | 97f41fab-22c2-4b0c-8e47-d1aeee9f1e0e | .\\sighting_Guildma.yml       |\n+------+----------------+--------------------------------------+------------------------------+\n")),(0,a.kt)("p",null,"Duplicate uuid found in threat sighting"),(0,a.kt)("h4",{id:"incorrect-behaviorid-in-hunting-section"},"Incorrect behaviorId in hunting section"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"> python sightingValidator.py -f sighting_Guildma.yml\n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"+------+--------------------------------------------------------------------+--------------------------------------+------------------------------+\n| GUID |                               Error                                |                 Key                  |           Sighting           |\n+------+--------------------------------------------------------------------+--------------------------------------+------------------------------+\n|  -   | BehaviorId in huntingQuery that does not exist in behavior section | 97f4sfab-22c2-4b0c-8e47-d1aeee9f1e0e | .\\sighting_Guildma.yml       |\n+------+--------------------------------------------------------------------+--------------------------------------+------------------------------+\n")),(0,a.kt)("p",null,"A behaviorId in ",(0,a.kt)("inlineCode",{parentName:"p"},"threatHunting")," section was found and wasn't declared in the threat sighting file on behaviors section."))}u.isMDXComponent=!0}}]);